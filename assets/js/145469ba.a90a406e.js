"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2052],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||p[m]||l;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},58215:function(e,t,r){r.d(t,{Z:function(){return a}});var n=r(67294);function a(e){var t=e.children,r=e.hidden,a=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:a},t)}},9877:function(e,t,r){r.d(t,{Z:function(){return d}});var n=r(87462),a=r(67294),l=r(72389),i=r(63725),o=r(86010),s="tabItem_LplD";function u(e){var t,r,l,u=e.lazy,d=e.block,p=e.defaultValue,c=e.values,m=e.groupId,f=e.className,b=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=c?c:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,i.lx)(v,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===p?p:null!=(t=null!=p?p:null==(r=b.find((function(e){return e.props.default})))?void 0:r.props.value)?t:null==(l=b[0])?void 0:l.props.value;if(null!==y&&!v.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=(0,i.UB)(),g=k.tabGroupChoices,N=k.setTabGroupChoices,_=(0,a.useState)(y),w=_[0],T=_[1],O=[],x=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var E=g[m];null!=E&&E!==w&&v.some((function(e){return e.value===E}))&&T(E)}var C=function(e){var t=e.currentTarget,r=O.indexOf(t),n=v[r].value;n!==w&&(x(t),T(n),null!=m&&N(m,n))},P=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n=O.indexOf(e.currentTarget)+1;r=O[n]||O[0];break;case"ArrowLeft":var a=O.indexOf(e.currentTarget)-1;r=O[a]||O[O.length-1]}null==(t=r)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},f)},v.map((function(e){var t=e.value,r=e.label,l=e.attributes;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return O.push(e)},onKeyDown:P,onFocus:C,onClick:C},l,{className:(0,o.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=r?r:t)}))),u?(0,a.cloneElement)(b.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function d(e){var t=(0,l.Z)();return a.createElement(u,(0,n.Z)({key:String(t)},e))}},29038:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return b},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return m}});var n=r(87462),a=r(63366),l=(r(67294),r(3905)),i=r(9877),o=r(58215),s=["components"],u={id:"display-name",title:"mbr/display_name",description:"The ActiveMember360 filter hook mbr/display_name is used to define a WordPress display name for the logged in user.",sidebar_label:"mbr/display_name"},d=void 0,p={unversionedId:"developer/hooks/display-name",id:"developer/hooks/display-name",title:"mbr/display_name",description:"The ActiveMember360 filter hook mbr/display_name is used to define a WordPress display name for the logged in user.",source:"@site/docs/developer/hooks/display-name.mdx",sourceDirName:"developer/hooks",slug:"/developer/hooks/display-name",permalink:"/developer/hooks/display-name",tags:[],version:"current",lastUpdatedAt:1647023204,formattedLastUpdatedAt:"3/11/2022",frontMatter:{id:"display-name",title:"mbr/display_name",description:"The ActiveMember360 filter hook mbr/display_name is used to define a WordPress display name for the logged in user.",sidebar_label:"mbr/display_name"},sidebar:"api",previous:{title:"mbr/3rd_party_authentication",permalink:"/developer/hooks/3rd-party-authentication"},next:{title:"mbr/excerpt",permalink:"/developer/hooks/excerpt"}},c={},m=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2}],f={toc:m};function b(e){var t=e.components,r=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"This filter hook enables you to define the WordPress field ",(0,l.kt)("inlineCode",{parentName:"p"},"display_name")," when the user is first created."),(0,l.kt)("p",null,"Unlike the ",(0,l.kt)("a",{parentName:"p",href:"/developer/hooks/role-alternate",title:"Click to learn how to use the mbr/role/alternate filter"},(0,l.kt)("strong",{parentName:"a"},"mbr/role/alternate"))," filter hook, this setting does not get updated each time a user logs. The hook is only called once upon initial login so as not to disturb any other function which may rely on this setting (i.e. BuddyPress, bbPress, BuddyBoss etc.)."),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameters"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"$display_name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Variable containing the current WordPress field value of ",(0,l.kt)("inlineCode",{parentName:"td"},"display_name"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"$first_name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Variable containing the WordPress field value of ",(0,l.kt)("inlineCode",{parentName:"td"},"first_name"),", which is obtained from the ActiveCampaign contact field ",(0,l.kt)("inlineCode",{parentName:"td"},"first_name"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"$last_name"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Variable containing the WordPress field value of ",(0,l.kt)("inlineCode",{parentName:"td"},"last_name"),", which is obtained from ActiveCampaign contact field ",(0,l.kt)("inlineCode",{parentName:"td"},"last_name"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"$arrCONTACT"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Contains an array of the ActiveCampaign contact record fields for the user who just logged in.")))),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)(i.Z,{groupId:"examples",defaultValue:"ex1",values:[{label:"Example 1",value:"ex1"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"ex1",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function my_mbr_display_name_hook($display_name, $first_name, $last_name, $arrCONTACT) {\n  // In this simple example, we create a \"display_name\" consisting\n  // of first name and last name initial only.\n  return ucfirst(trim($first_name)) . ' ' . strtoupper(substr(trim($last_name),0,1)) . '.';\n}\nadd_filter('mbr/display_name', 'my_mbr_display_name_hook',10,4);\n")))))}b.isMDXComponent=!0}}]);